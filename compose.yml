version: "3.9"

services:
  postgres:
    image: postgres:11.14
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  nginx:
    image: nginx:1.21.6
    ports:
      - 127.0.0.1:8880:8888
    volumes:
      - ${SOURCE_DIRECTORY}/docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SOURCE_DIRECTORY}/frontend:/frontend:ro
      - tmp-nginx:/tmp/nginx/

  anime-rss-devel:
    image: $USER-devel
    build:
      dockerfile: docker/Dockerfile
      target: anime-rss-devel
      args:
        - USER=$USER
        # UID is a bash variable, not an environment variable. Make sure to define it
        # explicitly before building the image or use the .env file.
        - UID=${UID:-1000}
    working_dir: $SOURCE_DIRECTORY
    volumes:
      - $SOURCE_DIRECTORY:$SOURCE_DIRECTORY
      - home-data:/home/$USER/
      - $HOME/.ssh/:/home/$USER/.ssh:ro
      - ${SSH_AUTH_SOCK:-/tmp/no-auth}:${SSH_AUTH_SOCK:-/tmp/no-auth}
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK:-/tmp/no-auth}
    depends_on:
      - postgres
      - nginx

    # We want to run this image in infinite loop to ba able to attach to it
    # without the need to run ugly run command first.
    # `docker compose run --use-aliases --service-ports devel`
    # With the infinite command we can just do `docker compose exec`.
    command: sleep infinity

volumes:
  db-data:
  # To store user history and some other tool user specific data
  home-data:
  tmp-nginx:
